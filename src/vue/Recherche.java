/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vue;

import controleur.modèle.Requetes;
import java.awt.Color;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JScrollPane;
import javax.swing.JTable;

/**
 *
 * @author Mariuca
 */
public class Recherche extends javax.swing.JFrame {

    public static Recherche r = new Recherche();
    private Requetes req;

    /**
     * Creates new form Recherche
     */
    public Recherche() {
        initComponents();
        getContentPane().setBackground(new Color(204, 204, 255));

        try {
            initreq(true);
        } catch (SQLException ex) {
            Logger.getLogger(Recherche.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Recherche.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    public Recherche(boolean local) {

        initComponents();
        getContentPane().setBackground(new Color(204, 204, 255));

        try {
            initreq(local);
        } catch (SQLException ex) {
            Logger.getLogger(Recherche.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Recherche.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void initreq(boolean local) throws SQLException, ClassNotFoundException {
        if (local == true) {
            this.req = new Requetes("local");
        } else {
            this.req = new Requetes("ece");
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu1 = new javax.swing.JMenu();
        Requêtes = new javax.swing.JScrollPane();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        R11 = new javax.swing.JButton();
        R3 = new javax.swing.JButton();
        R12 = new javax.swing.JButton();
        R15 = new javax.swing.JButton();
        R14 = new javax.swing.JButton();
        R4 = new javax.swing.JButton();
        R8 = new javax.swing.JButton();
        R7 = new javax.swing.JButton();
        R5 = new javax.swing.JButton();
        R1 = new javax.swing.JButton();
        R6 = new javax.swing.JButton();
        R9 = new javax.swing.JButton();
        R10 = new javax.swing.JButton();
        R2 = new javax.swing.JButton();
        R13 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();

        jMenu1.setText("jMenu1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Requêtes.setBackground(new java.awt.Color(255, 204, 255));

        jLabel1.setFont(new java.awt.Font("Hiragino Kaku Gothic Pro", 0, 18)); // NOI18N
        jLabel1.setText("Requêtes");

        jButton1.setBackground(new java.awt.Color(204, 204, 255));
        jButton1.setFont(new java.awt.Font("Hiragino Kaku Gothic Pro", 0, 14)); // NOI18N
        jButton1.setText("Accueil");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));

        R11.setBackground(new java.awt.Color(204, 238, 238));
        R11.setFont(new java.awt.Font("Hiragino Kaku Gothic Pro", 0, 14)); // NOI18N
        R11.setText("R11. Nombre de patients guéris, par médecin.");
        R11.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        R11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                R11ActionPerformed(evt);
            }
        });

        R3.setBackground(new java.awt.Color(204, 238, 238));
        R3.setFont(new java.awt.Font("Hiragino Kaku Gothic Pro", 0, 14)); // NOI18N
        R3.setText("R3. Service et son directeur");
        R3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        R3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                R3ActionPerformed(evt);
            }
        });

        R12.setBackground(new java.awt.Color(204, 238, 238));
        R12.setFont(new java.awt.Font("Hiragino Kaku Gothic Pro", 0, 14)); // NOI18N
        R12.setText("R12. Repartition des mutuelles par patient");
        R12.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        R12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                R12ActionPerformed(evt);
            }
        });

        R15.setBackground(new java.awt.Color(204, 238, 238));
        R15.setFont(new java.awt.Font("Hiragino Kaku Gothic Pro", 0, 14)); // NOI18N
        R15.setText("R15. Nom de l’infirmier qui a le salaire maximum et montant de celui-ci ");
        R15.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        R15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                R15ActionPerformed(evt);
            }
        });

        R14.setBackground(new java.awt.Color(204, 238, 238));
        R14.setFont(new java.awt.Font("Hiragino Kaku Gothic Pro", 0, 14)); // NOI18N
        R14.setText("R14. Nombre de patients par service ");
        R14.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        R14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                R14ActionPerformed(evt);
            }
        });

        R4.setBackground(new java.awt.Color(204, 238, 238));
        R4.setFont(new java.awt.Font("Hiragino Kaku Gothic Pro", 0, 14)); // NOI18N
        R4.setText("R4. Chambre et surveillant correspondant");
        R4.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        R4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                R4ActionPerformed(evt);
            }
        });

        R8.setBackground(new java.awt.Color(204, 238, 238));
        R8.setFont(new java.awt.Font("Hiragino Kaku Gothic Pro", 0, 14)); // NOI18N
        R8.setText("R8. Nb d’infirmier(ères) affecté(es) au service / nb malades hospitalisés par chaque service.");
        R8.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        R8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                R8ActionPerformed(evt);
            }
        });

        R7.setBackground(new java.awt.Color(204, 238, 238));
        R7.setFont(new java.awt.Font("Hiragino Kaku Gothic Pro", 0, 14)); // NOI18N
        R7.setText("R7. Fiche d'identite d'un docteur ");
        R7.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        R7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                R7ActionPerformed(evt);
            }
        });

        R5.setBackground(new java.awt.Color(204, 238, 238));
        R5.setFont(new java.awt.Font("Hiragino Kaku Gothic Pro", 0, 14)); // NOI18N
        R5.setText("R5. Moyenne des salaires des infirmiers(ères) par service");
        R5.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        R5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                R5ActionPerformed(evt);
            }
        });

        R1.setBackground(new java.awt.Color(204, 238, 238));
        R1.setFont(new java.awt.Font("Hiragino Kaku Gothic Pro", 0, 14)); // NOI18N
        R1.setText("R1. Adhérents de la MAAF");
        R1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        R1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                R1ActionPerformed(evt);
            }
        });

        R6.setBackground(new java.awt.Color(204, 238, 238));
        R6.setFont(new java.awt.Font("Hiragino Kaku Gothic Pro", 0, 14)); // NOI18N
        R6.setText("R6. Nombre moyen de lits par chambre pour chaque service du bâtiment A ");
        R6.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        R6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                R6ActionPerformed(evt);
            }
        });

        R9.setBackground(new java.awt.Color(204, 238, 238));
        R9.setFont(new java.awt.Font("Hiragino Kaku Gothic Pro", 0, 14)); // NOI18N
        R9.setText("R9. Prénom et nom des docteurs ayant au moins un malade hospitalisé. ");
        R9.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        R9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                R9ActionPerformed(evt);
            }
        });

        R10.setBackground(new java.awt.Color(204, 238, 238));
        R10.setFont(new java.awt.Font("Hiragino Kaku Gothic Pro", 0, 14)); // NOI18N
        R10.setText("R10. Prénom et nom des docteurs n’ayant aucun malade hospitalisé. ");
        R10.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        R10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                R10ActionPerformed(evt);
            }
        });

        R2.setBackground(new java.awt.Color(204, 238, 238));
        R2.setFont(new java.awt.Font("Hiragino Kaku Gothic Pro", 0, 14)); // NOI18N
        R2.setText("R2. Infirmiers de nuit");
        R2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        R2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                R2ActionPerformed(evt);
            }
        });

        R13.setBackground(new java.awt.Color(204, 238, 238));
        R13.setFont(new java.awt.Font("Hiragino Kaku Gothic Pro", 0, 14)); // NOI18N
        R13.setText("R13. Fiche d’identité d’un patient. ");
        R13.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        R13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                R13ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(204, 238, 238));
        jButton2.setFont(new java.awt.Font("Hiragino Kaku Gothic Pro", 0, 14)); // NOI18N
        jButton2.setText("R16. Infirmiers qui ont un salaire compris entre 1200 et 1500€");
        jButton2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(204, 238, 238));
        jButton3.setFont(new java.awt.Font("Hiragino Kaku Gothic Pro", 0, 14)); // NOI18N
        jButton3.setText("R18. Nombre d'infirmières qui ont un salaire compris entre a 1800 et 2100€");
        jButton3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(204, 238, 238));
        jButton4.setFont(new java.awt.Font("Hiragino Kaku Gothic Pro", 0, 14)); // NOI18N
        jButton4.setText("R17. Liste des employés ");
        jButton4.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setBackground(new java.awt.Color(204, 238, 238));
        jButton5.setFont(new java.awt.Font("Hiragino Kaku Gothic Pro", 0, 14)); // NOI18N
        jButton5.setText("R19. Infirmiers de jour");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Hiragino Kaku Gothic Pro", 0, 14)); // NOI18N
        jLabel2.setText("INFORMATIONS INFIRMIER");

        jLabel3.setFont(new java.awt.Font("Hiragino Kaku Gothic Pro", 0, 14)); // NOI18N
        jLabel3.setText("INFORMATIONS SERVICE");

        jLabel4.setFont(new java.awt.Font("Hiragino Kaku Gothic Pro", 0, 14)); // NOI18N
        jLabel4.setText("INFORMATIONS PATIENT ");

        jLabel5.setFont(new java.awt.Font("Hiragino Kaku Gothic Pro", 0, 14)); // NOI18N
        jLabel5.setText("INFORMATIONS EMPLOYÉS ");

        jLabel6.setFont(new java.awt.Font("Hiragino Kaku Gothic Pro", 0, 14)); // NOI18N
        jLabel6.setText("INFORMATIONS DOCTEUR ");

        jLabel7.setFont(new java.awt.Font("Hiragino Kaku Gothic Pro", 0, 14)); // NOI18N
        jLabel7.setText("INFORMATIONS CHAMBRE ");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(R2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(R3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(R14))
                            .addComponent(R6)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(jLabel7))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addComponent(jLabel3))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(jLabel2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(jLabel5))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(R11)
                            .addComponent(R12))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(R13)
                            .addComponent(R1)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(jLabel4))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addComponent(jLabel6))
                    .addComponent(R7, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(R9)
                    .addComponent(R10)
                    .addComponent(jButton4)
                    .addComponent(jButton3)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(R4))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(R15))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(R5))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(R8, javax.swing.GroupLayout.PREFERRED_SIZE, 662, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(287, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(R2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(R5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(R15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(R8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addGap(8, 8, 8)
                .addComponent(R6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(R3)
                    .addComponent(R14))
                .addGap(18, 18, 18)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(R4)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(R11)
                    .addComponent(R1))
                .addGap(8, 8, 8)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(R12)
                    .addComponent(R13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(R7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(R9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(R10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3)
                .addGap(100, 100, 100))
        );

        jScrollPane2.setViewportView(jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(78, 78, 78))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 726, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(Requêtes, javax.swing.GroupLayout.DEFAULT_SIZE, 393, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 552, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Requêtes, javax.swing.GroupLayout.PREFERRED_SIZE, 594, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 574, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        //jButton1ActionPerformed
        new Bienvenue().setVisible(true);   //On revient à l'accueil
        this.setVisible(false); //On ferme la fenetre Recherche
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        Object[][] result;
        try {
            result = this.req.employes();
            Object headers[] = {"Prénom", "Nom", "Téléphone", "Adresse" };
            this.Requêtes.getViewport().removeAll();
            JTable table = new JTable(result, headers);
            this.Requêtes.getViewport().add(table);
        } catch (SQLException ex) {
            Logger.getLogger(Recherche.class.getName()).log(Level.SEVERE, null, ex);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        Object[][] result;
        try {
            result = this.req.salaireinf1800();
            Object headers[] = {"Nom", "Prénom"};
            this.Requêtes.getViewport().removeAll();
            JTable table = new JTable(result, headers);
            this.Requêtes.getViewport().add(table);
        } catch (SQLException ex) {
            Logger.getLogger(Recherche.class.getName()).log(Level.SEVERE, null, ex);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        Object[][] result;
        try {
            result = this.req.salairesdesinfi();
            Object headers[] = {"Nom", "Prénom"};
            this.Requêtes.getViewport().removeAll();
            JTable table = new JTable(result, headers);
            this.Requêtes.getViewport().add(table);
        } catch (SQLException ex) {
            Logger.getLogger(Recherche.class.getName()).log(Level.SEVERE, null, ex);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void R13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_R13ActionPerformed
        //R13. Fiche d’identité d’un patient.
            Object[][] result;
        try {
            result = this.req.fichepatient();
            Object headers[] = {"Prenom", "Nom", "Adresse", "Mutuelle", "Chambre"};
            this.Requêtes.getViewport().removeAll();
            JTable table = new JTable(result, headers);
            this.Requêtes.getViewport().add(table);
        } catch (SQLException ex) {
            Logger.getLogger(Recherche.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_R13ActionPerformed

    private void R2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_R2ActionPerformed
        //R2. Prénom et nom des infirmier(ères) travaillant pendant la rotation de nuit.
        //Bouton4 // Infirmiers //jButton4ActionPerformed
        Object[][] result;
        try {
            result = this.req.infirmiernuit();
            Object headers[] = {"Prenom", "Nom"};
            this.Requêtes.getViewport().removeAll();
            JTable table = new JTable(result, headers);
            this.Requêtes.getViewport().add(table);
        } catch (SQLException ex) {
            Logger.getLogger(Recherche.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_R2ActionPerformed

    private void R10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_R10ActionPerformed
        //R10. Prénom et nom des docteurs n’ayant aucun malade hospitalisé.
        // jButton12ActionPerformed //Docteur
            Object[][] result;
        try {
            result = this.req.docteurssanspatients();
            Object headers[] = {"Prénom", "Nom"};
            this.Requêtes.getViewport().removeAll();
            JTable table = new JTable(result, headers);
            this.Requêtes.getViewport().add(table);
        } catch (SQLException ex) {
            Logger.getLogger(Recherche.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_R10ActionPerformed

    private void R9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_R9ActionPerformed
        //R9. Prénom et nom des docteurs ayant au moins un malade hospitalisé.
        //jButton11ActionPerformed // Docteur
        
        Object[][] result;
        try {
            result = this.req.docteursavecpatients();
            Object headers[] = {"Prénom", "Nom"};
            this.Requêtes.getViewport().removeAll();
            JTable table = new JTable(result, headers);
            this.Requêtes.getViewport().add(table);
        } catch (SQLException ex) {
            Logger.getLogger(Recherche.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_R9ActionPerformed

    private void R6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_R6ActionPerformed
        //R6. Nombre moyen de lits par chambre pour chaque service du bâtiment « A » de l’hôpital.
        //jButton8ActionPerformed BOuton 8 // CHAMBRE //SERVICE
        Object[][] result;
        try {
            result = this.req.litbatimentA();
            Object headers[] = {"Chambre", "Nombre moyen de lits"};
            this.Requêtes.getViewport().removeAll();
            JTable table = new JTable(result, headers);
            this.Requêtes.getViewport().add(table);
        } catch (SQLException ex) {
            Logger.getLogger(Recherche.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_R6ActionPerformed

    private void R1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_R1ActionPerformed
        //R1. Prénom et nom des malades affiliés à la mutuelle « MAAF ». //Bouton2 //Malade
        Object[][] result; //jButton2ActionPerformed
        try {
            result = this.req.usermaaf();
            Object headers[] = {"Prenom", "Nom"};
            this.Requêtes.getViewport().removeAll();
            JTable table = new JTable(result, headers);
            this.Requêtes.getViewport().add(table);
        } catch (SQLException ex) {
            Logger.getLogger(Recherche.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_R1ActionPerformed

    private void R5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_R5ActionPerformed
        //R5. Moyenne des salaires des infirmiers(ères) par service.
        //BOuton7 //jButton7ActionPerformed //Infimières
        Object[][] result;
        try {
            result = this.req.moyennesalaires();
            Object headers[] = {"Services", "Moyenne de salaires"};
            this.Requêtes.getViewport().removeAll();
            JTable table = new JTable(result, headers);
            this.Requêtes.getViewport().add(table);
        } catch (SQLException ex) {
            Logger.getLogger(Recherche.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_R5ActionPerformed

    private void R7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_R7ActionPerformed
        //R7. Nb total médecins & nb spés médicales pr chaque malade soigné par + de 3 médecins.
        //jButton9ActionPerformed
            Object[][] result;
        try {
            result = this.req.infodoc();
            Object headers[] = {"Prénom", "Nom", "Spécialité"};
            this.Requêtes.getViewport().removeAll();
            JTable table = new JTable(result, headers);
            this.Requêtes.getViewport().add(table);
        } catch (SQLException ex) {
            Logger.getLogger(Recherche.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_R7ActionPerformed

    private void R8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_R8ActionPerformed
        //R8. Nb d’infirmier(ères) affecté(es) au service / nb malades hospitalisés pr chaque service.
        //BOuton 10 //Infimières //jButton10ActionPerformed
        Object[][] result;
        try {
            result = this.req.ratioservices();
            Object headers[] = {"Nombre d'infirmiers", "Nom", "Ratio"};
            this.Requêtes.getViewport().removeAll();
            JTable table = new JTable(result, headers);
            this.Requêtes.getViewport().add(table);
        } catch (SQLException ex) {
            Logger.getLogger(Recherche.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_R8ActionPerformed

    private void R14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_R14ActionPerformed
        //R14 : Nombre de patients par service
           Object[][] result;
        try {
            result = this.req.patientsservice();
            Object headers[] = {"Nom du service", "Nombre de patients"};
            this.Requêtes.getViewport().removeAll();
            JTable table = new JTable(result, headers);
            this.Requêtes.getViewport().add(table);
        } catch (SQLException ex) {
            Logger.getLogger(Recherche.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_R14ActionPerformed

    private void R15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_R15ActionPerformed
        //R15 : Nom de l’infirmier qui a le salaire maximum et montant de celui-ci  //Infirmier
        //jButton3ActionPerformed
        Object[][] result;
        try {
            result = this.req.salairemaxinf();
            Object headers[] = {"Prénom de l'infirmier", "Nom de l'infirmier", "Montant du salaire"};
            this.Requêtes.getViewport().removeAll();
            JTable table = new JTable(result, headers);
            this.Requêtes.getViewport().add(table);
        } catch (SQLException ex) {
            Logger.getLogger(Recherche.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_R15ActionPerformed

    private void R12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_R12ActionPerformed
        //R12. Mutuelles des patients, par médecin.
        Object[][] result;
        try {
            result = this.req.repartitionmutuelles();
            Object headers[] = {"Nom mutuelle", "Nombre d'ahdérents"};
            this.Requêtes.getViewport().removeAll();
            JTable table = new JTable(result, headers);
            this.Requêtes.getViewport().add(table);
        } catch (SQLException ex) {
            Logger.getLogger(Recherche.class.getName()).log(Level.SEVERE, null, ex);
        }
        // jButton14ActionPerformed
    }//GEN-LAST:event_R12ActionPerformed

    private void R3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_R3ActionPerformed
        //R3. Nom et bâtiment d’un service & prénom, nom et spécialité de son directeur.
        //Service Bouton5 //jButton5ActionPerformed //SERVICE
        Object[][] result;
        try {
            result = this.req.services();
            Object headers[] = {"Service", "Batiment", "Prenom", "Nom"};
            this.Requêtes.getViewport().removeAll();
            JTable table = new JTable(result, headers);
            this.Requêtes.getViewport().add(table);
        } catch (SQLException ex) {
            Logger.getLogger(Recherche.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_R3ActionPerformed

    private void R11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_R11ActionPerformed
        //R11. Nombre de patients guéris, par médecin.
        //jButton13ActionPerformed //Bouton13 //Docteur
        Object[][] result;
        try {
            result = this.req.nbpatientsgueris();
            Object headers[] = {"Prenom du docteur", "Nom du docteur", "Nombre de patients soignés"};
            this.Requêtes.getViewport().removeAll();
            JTable table = new JTable(result, headers);
            this.Requêtes.getViewport().add(table);
        } catch (SQLException ex) {
            Logger.getLogger(Recherche.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_R11ActionPerformed

    
    //REQUETE 4
    private void R4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_R4ActionPerformed

Object[][] result;
        try {
            result = this.req.infochambre();
            Object headers[] = {"Chambre", "Service", "Nom de lit", "Prénom", "Nom"};
            this.Requêtes.getViewport().removeAll();
            JTable table = new JTable(result, headers);
            this.Requêtes.getViewport().add(table);
        } catch (SQLException ex) {
            Logger.getLogger(Recherche.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_R4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
      
Object[][] result;
        try {
            result = this.req.infirmierjour();
            Object headers[] = {"Prénom", "Nom"};
            this.Requêtes.getViewport().removeAll();
            JTable table = new JTable(result, headers);
            this.Requêtes.getViewport().add(table);
        } catch (SQLException ex) {
            Logger.getLogger(Recherche.class.getName()).log(Level.SEVERE, null, ex);
        }  // TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton R1;
    private javax.swing.JButton R10;
    private javax.swing.JButton R11;
    private javax.swing.JButton R12;
    private javax.swing.JButton R13;
    private javax.swing.JButton R14;
    private javax.swing.JButton R15;
    private javax.swing.JButton R2;
    private javax.swing.JButton R3;
    private javax.swing.JButton R4;
    private javax.swing.JButton R5;
    private javax.swing.JButton R6;
    private javax.swing.JButton R7;
    private javax.swing.JButton R8;
    private javax.swing.JButton R9;
    private javax.swing.JScrollPane Requêtes;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables

}
